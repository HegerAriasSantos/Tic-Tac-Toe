{"version":3,"sources":["components/Square.js","components/Game.js","index.js"],"names":["Square","props","onClick","value","Game","handleClick","i","Squares","state","ListSquares","slice","calculateWinner","Xturn","setState","winner","Xpts","Opts","Array","fill","squares","lines","length","a","b","c","className","this","status","positionSquare","again","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iNAIeA,EAJA,SAACC,GACd,OAAO,wBAAQC,QAASD,EAAMC,QAAvB,SAAiCD,EAAME,SC8HjCC,G,wDA1Hb,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IA2CRI,YAAc,SAACC,GACb,IAAMC,EAAU,EAAKC,MAAMC,YAAYC,QACvC,IAAI,EAAKC,gBAAgBJ,KAAYA,EAAQD,GAA7C,CAGEC,EAAQD,GAAK,EAAKE,MAAMI,MAAQ,IAAM,IACtC,EAAKC,SAAS,CACZJ,YAAaF,EACbK,OAAO,EAAKJ,MAAMI,QAGtB,IAAIE,EAAS,EAAKH,gBAAgBJ,GACnB,OAAXO,IACS,MAAXA,EACI,EAAKD,SAAS,CACZE,KAAM,EAAKP,MAAMO,KAAO,IAE1B,EAAKF,SAAS,CACZG,KAAM,EAAKR,MAAMQ,KAAO,OA5DhC,EAAKR,MAAQ,CACXC,YAAaQ,MAAM,GAAGC,KAAK,MAC3BN,OAAO,EACPE,OAAQ,KACRC,KAAM,EACNC,KAAM,GAPS,E,mDAUnB,SAAgBG,GAWd,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAd,EAAI,EAAGA,EAAIc,EAAMC,OAAQf,IAAK,CAAC,IAAD,cACnBc,EAAMd,GADa,GAC9BgB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GACEL,EAAQG,IACRH,EAAQG,KAAOH,EAAQI,IACvBJ,EAAQG,KAAOH,EAAQK,GAEvB,OAAOL,EAAQG,GAGnB,OAAO,O,4BAET,SAAehB,GAAI,IAAD,OAChB,OACE,qBAAKmB,UAAU,cAAf,SACE,cAAC,EAAD,CACEvB,QAAS,kBAAM,EAAKG,YAAYC,IAChCH,MAAOuB,KAAKlB,MAAMC,YAAYH,S,mBA6BtC,WACEoB,KAAKb,SAAS,CACZJ,YAAaQ,MAAM,GAAGC,KAAK,MAC3BN,OAAO,M,oBAIX,WAAU,IAEJe,EAFG,OACHb,EAASY,KAAKf,gBAAgBe,KAAKlB,MAAMC,aAQ7C,OALEkB,EADEb,EACI,yBAAqBA,GAElB,aAAeY,KAAKlB,MAAMI,MAAQ,IAAM,KAIjD,sBAAKa,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,2CACA,8BAAMC,KAAKlB,MAAMO,UAEnB,sBAAKU,UAAU,aAAf,UACE,2CACA,8BAAMC,KAAKlB,MAAMQ,aAGrB,gCACE,oBAAIS,UAAU,cAAd,SAA6BE,IAC7B,sBAAKF,UAAU,cAAf,UACGC,KAAKE,eAAe,GACpBF,KAAKE,eAAe,GACpBF,KAAKE,eAAe,GACpBF,KAAKE,eAAe,GACpBF,KAAKE,eAAe,GACpBF,KAAKE,eAAe,GACpBF,KAAKE,eAAe,GACpBF,KAAKE,eAAe,GACpBF,KAAKE,eAAe,SAGzB,8BACE,wBACEH,UAAU,eACVvB,QAAS,kBAAM,EAAK2B,MAAM,EAAKrB,MAAMM,SAFvC,iC,GA/GSgB,IAAMC,YCCzBC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.fc11e68f.chunk.js","sourcesContent":["const Square = (props) => {\n  return <button onClick={props.onClick}>{props.value}</button>;\n};\n\nexport default Square;\n","import Square from \"./Square\";\nimport React from \"react\";\nimport \"./style/Games.css\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ListSquares: Array(9).fill(null),\n      Xturn: true,\n      winner: null,\n      Xpts: 0,\n      Opts: 0,\n    };\n  }\n  calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  positionSquare(i) {\n    return (\n      <div className=\"Board__Item\">\n        <Square\n          onClick={() => this.handleClick(i)}\n          value={this.state.ListSquares[i]}\n        />\n      </div>\n    );\n  }\n\n  handleClick = (i) => {\n    const Squares = this.state.ListSquares.slice();\n    if (this.calculateWinner(Squares) || Squares[i]) {\n      return;\n    } else {\n      Squares[i] = this.state.Xturn ? \"X\" : \"O\";\n      this.setState({\n        ListSquares: Squares,\n        Xturn: this.state.Xturn ? false : true,\n      });\n    }\n    let winner = this.calculateWinner(Squares);\n    if (winner !== null) {\n      winner === \"X\"\n        ? this.setState({\n            Xpts: this.state.Xpts + 1,\n          })\n        : this.setState({\n            Opts: this.state.Opts + 1,\n          });\n    }\n  };\n\n  again() {\n    this.setState({\n      ListSquares: Array(9).fill(null),\n      Xturn: true,\n    });\n  }\n\n  render() {\n    let winner = this.calculateWinner(this.state.ListSquares);\n    let status;\n    if (winner) {\n      status = `The winner is: ${winner}`;\n    } else {\n      status = \"The turn \" + (this.state.Xturn ? \"X\" : \"O\");\n    }\n\n    return (\n      <div className=\"Game\">\n        <div className=\"Ptos\">\n          <div className=\"Ptos__ptos\">\n            <div>X points</div>\n            <div>{this.state.Xpts}</div>\n          </div>\n          <div className=\"Ptos__ptos\">\n            <div>O Points</div>\n            <div>{this.state.Opts}</div>\n          </div>\n        </div>\n        <div>\n          <h1 className=\"Game__Title\">{status}</h1>\n          <div className=\"Game__Board\">\n            {this.positionSquare(0)}\n            {this.positionSquare(1)}\n            {this.positionSquare(2)}\n            {this.positionSquare(3)}\n            {this.positionSquare(4)}\n            {this.positionSquare(5)}\n            {this.positionSquare(6)}\n            {this.positionSquare(7)}\n            {this.positionSquare(8)}\n          </div>\n        </div>\n        <div>\n          <button\n            className=\"Game__repeat\"\n            onClick={() => this.again(this.state.winner)}\n          >\n            Play again\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Game from \"./components/Game\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}